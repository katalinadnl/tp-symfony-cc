security:
    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email

    password_hashers:
        App\Entity\User:
            algorithm: auto

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main:
            lazy: true
            provider: app_user_provider
            custom_authenticator: App\Security\LoginAuthenticator
            entry_point: App\Security\LoginAuthenticator
            logout:
                path: app_logout
                target: app_home
    
    role_hierarchy:
        ROLE_ADMIN:     [ROLE_USER]
        ROLE_USER:    [ ]
    
    access_control:
        # Pages accessibles à tous
        - { path: ^/login$, roles: PUBLIC_ACCESS }
        - { path: ^/forgot-password$, roles: PUBLIC_ACCESS }

        # Admin accès à tout
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/, roles: IS_AUTHENTICATED_FULLY }

        # Pages pour les bannis
        - { path: ^/$, roles: IS_AUTHENTICATED_FULLY }  # Home page
        - { path: ^/logout$, roles: IS_AUTHENTICATED_FULLY }  # Logout
        
        # Bloquer les bannis pour tout sauf home et logout
        - { path: ^/(?!$|logout$), roles: "!ROLE_BANNED" }
        
        # Routes utilisateur standard
        - { path: ^/user, roles: ROLE_USER }
        - { path: ^/project, roles: ROLE_USER }
        - { path: ^/task, roles: ROLE_USER }
